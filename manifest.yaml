apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: aws-secrets-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: secrets.cfn.jerry153fish.com
spec:
  group: cfn.jerry153fish.com
  names:
    kind: Secrets
    listKind: SecretsList
    plural: secrets
    singular: secrets
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Secrets is the Schema for the secrets API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: SecretsSpec defines the desired state of Secrets
              properties:
                cfn:
                  items:
                    properties:
                      key:
                        minLength: 1
                        type: string
                      outputKey:
                        minLength: 1
                        type: string
                      stackName:
                        minLength: 1
                        type: string
                      type:
                        type: string
                    required:
                      - key
                      - outputKey
                      - stackName
                    type: object
                  type: array
                plainCreds:
                  items:
                    properties:
                      key:
                        minLength: 1
                        type: string
                      type:
                        type: string
                      value:
                        minLength: 1
                        type: string
                    required:
                      - key
                      - value
                    type: object
                  type: array
                secretName:
                  description:
                    Foo is an example field of Secrets. Edit secrets_types.go
                    to remove/update
                  type: string
              type: object
            status:
              description: SecretsStatus defines the observed state of Secrets
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-secrets-controller-manager
  namespace: aws-secrets-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: aws-secrets-leader-election-role
  namespace: aws-secrets-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-secrets-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cfn.jerry153fish.com
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cfn.jerry153fish.com
    resources:
      - secrets/finalizers
    verbs:
      - update
  - apiGroups:
      - cfn.jerry153fish.com
    resources:
      - secrets/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-secrets-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-secrets-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aws-secrets-leader-election-rolebinding
  namespace: aws-secrets-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: aws-secrets-leader-election-role
subjects:
  - kind: ServiceAccount
    name: aws-secrets-controller-manager
    namespace: aws-secrets-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aws-secrets-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-secrets-manager-role
subjects:
  - kind: ServiceAccount
    name: aws-secrets-controller-manager
    namespace: aws-secrets-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aws-secrets-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-secrets-proxy-role
subjects:
  - kind: ServiceAccount
    name: aws-secrets-controller-manager
    namespace: aws-secrets-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: a88badc0.jerry153fish.com
kind: ConfigMap
metadata:
  name: aws-secrets-manager-config
  namespace: aws-secrets-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: aws-secrets-controller-manager-metrics-service
  namespace: aws-secrets-system
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: aws-secrets-controller-manager
  namespace: aws-secrets-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: quay.io/jerry153fish/aws-secrets:latest
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: aws-secrets-controller-manager
      terminationGracePeriodSeconds: 10
